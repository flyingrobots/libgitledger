{"timestamp": "2025-10-23T09:10:12.717131Z", "branches": ["feat/dual-build-system", "feat/scaffolding", "feat/coding-standards"], "activity": ["Implemented dual CMake/Meson scaffolding with stub library/tests/CLI and Makefile helpers (issue #2).", "Documented repo structure with README scaffolds, replacing placeholder .gitkeep files (issue #1).", "Added clang-format/clang-tidy/editorconfig, lint scripts, sample sources/tests, and multi-compiler CI pipeline (issue #5)."], "prs": ["https://github.com/flyingrobots/libgitledger/pull/40", "https://github.com/flyingrobots/libgitledger/pull/41", "https://github.com/flyingrobots/libgitledger/pull/42"]}
{"who": "AGENT", "what": "Started orientation and reviewed mandatory guidance", "where": ["AGENTS.md", "ACTIVITY.log.jsonl"], "when": 1761211202, "why": "Need to internalize workflow rules before taking on tasks", "how": "Confirmed clean git status, read AGENTS.md, tailed existing activity log entry", "protip": "Always read the ledger instructions before touching code; assumptions get people yelled at"}
{"who": "AGENT", "what": "Completed repository orientation read-through", "where": ["docs/SPEC.md", "docs/PROJECT-PLAN.md", "libgitledger/", "CMakeLists.txt", "meson.build", "tests/version_test.c"], "when": 1761211287, "why": "Need deep context on architecture and current code before taking assignments", "how": "Reviewed specs and project plan, inspected existing source layout and build configs, noted current version scaffolding", "protip": "Check both CMake and Meson definitions to understand which files are actually compiled"}
{"who": "AGENT", "what": "Patched lint blockers from feedback on PR #42", "where": ["src/version.c", ".github/workflows/ci.yml"], "when": 1761211699, "why": "Need clang-tidy and workflow guardrails to actually run clean on the branch", "how": "Replaced snprintf with a manual decimal formatter to satisfy cert-err33 and ran make test-cmake; corrected the matrix conditional so clang-tidy runs when requested", "protip": "Double-check clang-tidy configs when you introduce new lint rules\u2014build once locally after changing them"}
{"who": "AGENT", "what": "Fixed CI package install for clang lane", "where": [".github/workflows/ci.yml"], "when": 1761211892, "why": "Clang matrix job failed because apt tried to install a non-existent clang++ package", "how": "Trimmed the install list to drop the bogus compiler package so apt sticks to clang", "protip": "Matrix env vars are fine for CC/CXX, but package names still need to be real"}
{"who": "AGENT", "what": "Brought version formatter in line with clang-format", "where": ["src/version.c"], "when": 1761212147, "why": "CI flagged the new hand-written formatter as unformatted, blocking the lint stage", "how": "Ran clang-format using repo defaults to satisfy the style gate without touching logic", "protip": "Any time you hand-write loops in C, run clang-format before pushing"}
{"who": "AGENT", "what": "Preparing commit for namespace rename to GITLEDGER", "where": [".clang-tidy", "include/libgitledger/version.h", "src/version.c"], "when": 1761212294, "why": "Need to record work before committing user-supplied METAGRAPH_ -> GITLEDGER_ changes", "how": "Reviewed diffs touching naming prefixes and version constants to ensure consistency", "protip": "Always log before you commit, especially when reconciling someone else's edits"}
{"who": "AGENT", "what": "Containerized default build/test workflow", "where": ["Makefile", "tools/container/", "tools/testing/prepare-fixtures.sh"], "when": 1761214089, "why": "Keep local builds isolated and mirror the CI matrix to avoid corrupting developer checkouts", "how": "Added Docker image + orchestration scripts, per-matrix sandbox copies, fixture repo preparation, and host override flag; validated with make cmake/test-cmake/tidy", "protip": "Always force CI parity locally\u2014if your make target doesn't match GitHub Actions, your bug reproductions will lie to you"}
{"who": "AGENT", "what": "Documented container-first workflow and host override", "where": ["README.md", "CONTRIBUTING.md"], "when": 1761214111, "why": "Need to warn contributors about destructive tests and explain the new Docker harness", "how": "Replaced direct build instructions with container commands, added guidance on I_KNOW_WHAT_I_AM_DOING and lint expectations", "protip": "Docs rot fast\u2014ship the how-to steps in the same change you land the tooling"}
{"who": "AGENT", "what": "Added host safety guard for make targets", "where": ["Makefile", "README.md", "CONTRIBUTING.md"], "when": 1761216127, "why": "Ensure host builds/tests explode unless the acknowledgement flag is set when outside Docker", "how": "Added guard macro to host-* make targets and clarified docs about the requirement", "protip": "Belt-and-suspenders: gate the interface _and_ document the sharp edge you\u2019re hiding"}
{"who": "AGENT", "what": "Taught container harness about git safe directories", "where": ["tools/container/invoke.sh"], "when": 1761221615, "why": "CI runners marked the rsynced checkout as dubious ownership and aborted", "how": "Added git safe.directory registration before we touch remotes so container jobs run clean", "protip": "Ubuntu 24.04 runners ship git 2.51\u2014safe.directory is enforced everywhere, so opt in before your first command"}
{"who": "AGENT", "what": "Brought docs/PROJECT-PLAN.md into markdownlint compliance", "where": ["docs/PROJECT-PLAN.md"], "when": 1761222641, "why": "CI feedback flagged heading duplicates and spacing violations", "how": "Normalized heading styles, added section-specific suffixes, and ensured blanks around headers", "protip": "Duplicate headings break deep links\u2014tag them with their milestone before they multiply"}
{"who": "AGENT", "what": "Re-enabled include sorting in clang-format", "where": [".clang-format"], "when": 1761222660, "why": "PR feedback asked us to stop pinning SortIncludes=false", "how": "Flipped SortIncludes back to true so formatter orders headers consistently", "protip": "Let the formatter fight the include wars; humans always lose"}
{"who": "AGENT", "what": "Trimmed C++-only modernize knobs from clang-tidy", "where": [".clang-tidy"], "when": 1761222676, "why": "Feedback pointed out modernize-* checks don't apply to our C code", "how": "Removed the lingering modernize option blocks so tidy focuses on C rules", "protip": "If a tidy option references auto_ptr, you're probably in the wrong language"}
{"who": "AGENT", "what": "Extended editorconfig to cover sh/cmake/meson files", "where": [".editorconfig"], "when": 1761222691, "why": "Lint feedback asked for explicit formatting rules on our scripts and build files", "how": "Added sections for *.sh, CMakeLists/ *.cmake, and meson.build with UTF-8, LF, trim, and 2-space indents", "protip": "Teach editors about your build files or they'll invent tabs where you least expect them"}
{"who": "AGENT", "what": "Trimmed workflow branch lists to markdownlint-friendly spacing", "where": [".github/workflows/ci.yml"], "when": 1761222740, "why": "Feedback flagged the inline arrays with interior spaces", "how": "Removed the padding inside push/pull_request branch lists", "protip": "workflow-lint is picky\u2014treat inline arrays like JSON and skip the extra spaces"}
{"who": "AGENT", "what": "Filtered clang-tidy runs to production code only", "where": ["tools/lint/run_clang_tidy.sh", ".clang-tidy", ".github/workflows/ci.yml"], "when": 1761222850, "why": "CI feedback noted clang-tidy was still analyzing test sources despite HeaderFilter", "how": "Filter compile_commands.json to src/libgitledger entries, expand HeaderFilterRegex, and document the policy in the workflow", "protip": "When tidy screams about unit tests, prune the compile database instead of chasing false positives"}
{"who": "AGENT", "what": "Pinned CI matrix toolchains to explicit GCC/Clang versions", "where": [".github/workflows/ci.yml"], "when": 1761222896, "why": "Feedback noted the jobs were labelled GCC 14 / Clang 18 but using unversioned compilers", "how": "Set CC/CXX to gcc-14 and clang-18 variants, added matching apt packages, and reported clang-format/tidy 18", "protip": "If your job title says GCC 14, make sure the environment agrees"}
{"who": "AGENT", "what": "Locked CI docker usage behind explicit checks", "where": [".github/workflows/ci.yml"], "when": 1761223001, "why": "Feedback requested we verify Docker and build the image before running make targets that expect it", "how": "Added docker version guard and an explicit docker build of tools/container/Dockerfile ahead of the containerised make steps", "protip": "Make sure the daemon is awake before you ask make to spin containers"}
{"who": "AGENT", "what": "Dialed project down to C17 and scoped warnings per target", "where": ["CMakeLists.txt"], "when": 1761223657, "why": "Feedback requested a more portable standard and per-target warning flags", "how": "Switched CMAKE_C_STANDARD to 17, created PROJECT_WARNING_FLAGS, and applied them with target_compile_options", "protip": "Global add_compile_options hits everything\u2014targets stay happier when flagged individually"}
{"who": "AGENT", "what": "Made semantic version fields unsigned", "where": ["include/libgitledger/version.h", "src/version.c"], "when": 1761223712, "why": "Feedback requested preventing negative version components", "how": "Switched struct members to uint32_t, adjusted write_decimal signature, and dropped casts", "protip": "Version numbers never go negative\u2014use unsigned and let the compiler enforce it"}
