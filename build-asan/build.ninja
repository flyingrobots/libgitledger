# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 4.1

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: libgitledger
# Configurations: Debug
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5


#############################################
# Set configuration variable for custom commands.

CONFIGURATION = Debug
# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = /Users/james/git/libgitledger/build-asan/
# =============================================================================
# Object build statements for STATIC_LIBRARY target gitledger


#############################################
# Order-only phony target for gitledger

build cmake_object_order_depends_target_gitledger: phony || .

build CMakeFiles/gitledger.dir/libgitledger/core/context.c.o: C_COMPILER__gitledger_unscanned_Debug /Users/james/git/libgitledger/libgitledger/core/context.c || cmake_object_order_depends_target_gitledger
  CONFIG = Debug
  DEFINES = -DGITLEDGER_BUILD=1
  DEP_FILE = CMakeFiles/gitledger.dir/libgitledger/core/context.c.o.d
  FLAGS = -fsanitize=address,undefined -g -std=c17 -arch arm64 -Wall -Wextra -Werror -Wpedantic -Wshadow -Wconversion -fvisibility=hidden
  INCLUDES = -I/Users/james/git/libgitledger/libgitledger/include -I/Users/james/git/libgitledger/include
  OBJECT_DIR = CMakeFiles/gitledger.dir
  OBJECT_FILE_DIR = CMakeFiles/gitledger.dir/libgitledger/core

build CMakeFiles/gitledger.dir/libgitledger/core/domain/gitledger.c.o: C_COMPILER__gitledger_unscanned_Debug /Users/james/git/libgitledger/libgitledger/core/domain/gitledger.c || cmake_object_order_depends_target_gitledger
  CONFIG = Debug
  DEFINES = -DGITLEDGER_BUILD=1
  DEP_FILE = CMakeFiles/gitledger.dir/libgitledger/core/domain/gitledger.c.o.d
  FLAGS = -fsanitize=address,undefined -g -std=c17 -arch arm64 -Wall -Wextra -Werror -Wpedantic -Wshadow -Wconversion -fvisibility=hidden
  INCLUDES = -I/Users/james/git/libgitledger/libgitledger/include -I/Users/james/git/libgitledger/include
  OBJECT_DIR = CMakeFiles/gitledger.dir
  OBJECT_FILE_DIR = CMakeFiles/gitledger.dir/libgitledger/core/domain

build CMakeFiles/gitledger.dir/libgitledger/core/domain/error.c.o: C_COMPILER__gitledger_unscanned_Debug /Users/james/git/libgitledger/libgitledger/core/domain/error.c || cmake_object_order_depends_target_gitledger
  CONFIG = Debug
  DEFINES = -DGITLEDGER_BUILD=1
  DEP_FILE = CMakeFiles/gitledger.dir/libgitledger/core/domain/error.c.o.d
  FLAGS = -fsanitize=address,undefined -g -std=c17 -arch arm64 -Wall -Wextra -Werror -Wpedantic -Wshadow -Wconversion -fvisibility=hidden
  INCLUDES = -I/Users/james/git/libgitledger/libgitledger/include -I/Users/james/git/libgitledger/include
  OBJECT_DIR = CMakeFiles/gitledger.dir
  OBJECT_FILE_DIR = CMakeFiles/gitledger.dir/libgitledger/core/domain

build CMakeFiles/gitledger.dir/src/version.c.o: C_COMPILER__gitledger_unscanned_Debug /Users/james/git/libgitledger/src/version.c || cmake_object_order_depends_target_gitledger
  CONFIG = Debug
  DEFINES = -DGITLEDGER_BUILD=1
  DEP_FILE = CMakeFiles/gitledger.dir/src/version.c.o.d
  FLAGS = -fsanitize=address,undefined -g -std=c17 -arch arm64 -Wall -Wextra -Werror -Wpedantic -Wshadow -Wconversion -fvisibility=hidden
  INCLUDES = -I/Users/james/git/libgitledger/libgitledger/include -I/Users/james/git/libgitledger/include
  OBJECT_DIR = CMakeFiles/gitledger.dir
  OBJECT_FILE_DIR = CMakeFiles/gitledger.dir/src


# =============================================================================
# Link build statements for STATIC_LIBRARY target gitledger


#############################################
# Link the static library libgitledger.a

build libgitledger.a: C_STATIC_LIBRARY_LINKER__gitledger_Debug CMakeFiles/gitledger.dir/libgitledger/core/context.c.o CMakeFiles/gitledger.dir/libgitledger/core/domain/gitledger.c.o CMakeFiles/gitledger.dir/libgitledger/core/domain/error.c.o CMakeFiles/gitledger.dir/src/version.c.o
  ARCH_FLAGS = -arch arm64
  CONFIG = Debug
  LANGUAGE_COMPILE_FLAGS = -fsanitize=address,undefined -g
  OBJECT_DIR = CMakeFiles/gitledger.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = libgitledger.a
  TARGET_PDB = gitledger.a.dbg

# =============================================================================
# Object build statements for EXECUTABLE target gitledger_version_test


#############################################
# Order-only phony target for gitledger_version_test

build cmake_object_order_depends_target_gitledger_version_test: phony || cmake_object_order_depends_target_gitledger

build CMakeFiles/gitledger_version_test.dir/tests/version_test.c.o: C_COMPILER__gitledger_version_test_unscanned_Debug /Users/james/git/libgitledger/tests/version_test.c || cmake_object_order_depends_target_gitledger_version_test
  CONFIG = Debug
  DEP_FILE = CMakeFiles/gitledger_version_test.dir/tests/version_test.c.o.d
  FLAGS = -fsanitize=address,undefined -g -std=c17 -arch arm64 -Wall -Wextra -Werror -Wpedantic -Wshadow -Wconversion -fvisibility=hidden
  INCLUDES = -I/Users/james/git/libgitledger/libgitledger/include -I/Users/james/git/libgitledger/include
  OBJECT_DIR = CMakeFiles/gitledger_version_test.dir
  OBJECT_FILE_DIR = CMakeFiles/gitledger_version_test.dir/tests


# =============================================================================
# Link build statements for EXECUTABLE target gitledger_version_test


#############################################
# Link the executable gitledger_version_test

build gitledger_version_test: C_EXECUTABLE_LINKER__gitledger_version_test_Debug CMakeFiles/gitledger_version_test.dir/tests/version_test.c.o | libgitledger.a || libgitledger.a
  CONFIG = Debug
  FLAGS = -fsanitize=address,undefined -g -arch arm64
  LINK_FLAGS = -Wl,-search_paths_first -Wl,-headerpad_max_install_names -fsanitize=address,undefined
  LINK_LIBRARIES = libgitledger.a
  OBJECT_DIR = CMakeFiles/gitledger_version_test.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = gitledger_version_test
  TARGET_PDB = gitledger_version_test.dbg

# =============================================================================
# Object build statements for EXECUTABLE target gitledger_tests


#############################################
# Order-only phony target for gitledger_tests

build cmake_object_order_depends_target_gitledger_tests: phony || cmake_object_order_depends_target_gitledger

build CMakeFiles/gitledger_tests.dir/libgitledger/tests/main.c.o: C_COMPILER__gitledger_tests_unscanned_Debug /Users/james/git/libgitledger/libgitledger/tests/main.c || cmake_object_order_depends_target_gitledger_tests
  CONFIG = Debug
  DEP_FILE = CMakeFiles/gitledger_tests.dir/libgitledger/tests/main.c.o.d
  FLAGS = -fsanitize=address,undefined -g -std=c17 -arch arm64 -Wall -Wextra -Werror -Wpedantic -Wshadow -Wconversion -fvisibility=hidden
  INCLUDES = -I/Users/james/git/libgitledger/libgitledger/include -I/Users/james/git/libgitledger/include
  OBJECT_DIR = CMakeFiles/gitledger_tests.dir
  OBJECT_FILE_DIR = CMakeFiles/gitledger_tests.dir/libgitledger/tests


# =============================================================================
# Link build statements for EXECUTABLE target gitledger_tests


#############################################
# Link the executable gitledger_tests

build gitledger_tests: C_EXECUTABLE_LINKER__gitledger_tests_Debug CMakeFiles/gitledger_tests.dir/libgitledger/tests/main.c.o | libgitledger.a || libgitledger.a
  CONFIG = Debug
  FLAGS = -fsanitize=address,undefined -g -arch arm64
  LINK_FLAGS = -Wl,-search_paths_first -Wl,-headerpad_max_install_names -fsanitize=address,undefined
  LINK_LIBRARIES = libgitledger.a
  OBJECT_DIR = CMakeFiles/gitledger_tests.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = gitledger_tests
  TARGET_PDB = gitledger_tests.dbg

# =============================================================================
# Object build statements for EXECUTABLE target mg-ledger


#############################################
# Order-only phony target for mg-ledger

build cmake_object_order_depends_target_mg-ledger: phony || cmake_object_order_depends_target_gitledger

build CMakeFiles/mg-ledger.dir/libgitledger/cli/mg-ledger.c.o: C_COMPILER__mg-ledger_unscanned_Debug /Users/james/git/libgitledger/libgitledger/cli/mg-ledger.c || cmake_object_order_depends_target_mg-ledger
  CONFIG = Debug
  DEP_FILE = CMakeFiles/mg-ledger.dir/libgitledger/cli/mg-ledger.c.o.d
  FLAGS = -fsanitize=address,undefined -g -std=c17 -arch arm64 -Wall -Wextra -Werror -Wpedantic -Wshadow -Wconversion -fvisibility=hidden
  INCLUDES = -I/Users/james/git/libgitledger/libgitledger/include -I/Users/james/git/libgitledger/include
  OBJECT_DIR = CMakeFiles/mg-ledger.dir
  OBJECT_FILE_DIR = CMakeFiles/mg-ledger.dir/libgitledger/cli


# =============================================================================
# Link build statements for EXECUTABLE target mg-ledger


#############################################
# Link the executable mg-ledger

build mg-ledger: C_EXECUTABLE_LINKER__mg-ledger_Debug CMakeFiles/mg-ledger.dir/libgitledger/cli/mg-ledger.c.o | libgitledger.a || libgitledger.a
  CONFIG = Debug
  FLAGS = -fsanitize=address,undefined -g -arch arm64
  LINK_FLAGS = -Wl,-search_paths_first -Wl,-headerpad_max_install_names -fsanitize=address,undefined
  LINK_LIBRARIES = libgitledger.a
  OBJECT_DIR = CMakeFiles/mg-ledger.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = mg-ledger
  TARGET_PDB = mg-ledger.dbg

# =============================================================================
# Object build statements for EXECUTABLE target gitledger_error_test


#############################################
# Order-only phony target for gitledger_error_test

build cmake_object_order_depends_target_gitledger_error_test: phony || cmake_object_order_depends_target_gitledger

build CMakeFiles/gitledger_error_test.dir/tests/error_test.c.o: C_COMPILER__gitledger_error_test_unscanned_Debug /Users/james/git/libgitledger/tests/error_test.c || cmake_object_order_depends_target_gitledger_error_test
  CONFIG = Debug
  DEP_FILE = CMakeFiles/gitledger_error_test.dir/tests/error_test.c.o.d
  FLAGS = -fsanitize=address,undefined -g -std=c17 -arch arm64 -Wall -Wextra -Werror -Wpedantic -Wshadow -Wconversion -fvisibility=hidden
  INCLUDES = -I/Users/james/git/libgitledger/libgitledger/include -I/Users/james/git/libgitledger/include
  OBJECT_DIR = CMakeFiles/gitledger_error_test.dir
  OBJECT_FILE_DIR = CMakeFiles/gitledger_error_test.dir/tests


# =============================================================================
# Link build statements for EXECUTABLE target gitledger_error_test


#############################################
# Link the executable gitledger_error_test

build gitledger_error_test: C_EXECUTABLE_LINKER__gitledger_error_test_Debug CMakeFiles/gitledger_error_test.dir/tests/error_test.c.o | libgitledger.a || libgitledger.a
  CONFIG = Debug
  FLAGS = -fsanitize=address,undefined -g -arch arm64
  LINK_FLAGS = -Wl,-search_paths_first -Wl,-headerpad_max_install_names -fsanitize=address,undefined
  LINK_LIBRARIES = libgitledger.a
  OBJECT_DIR = CMakeFiles/gitledger_error_test.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = gitledger_error_test
  TARGET_PDB = gitledger_error_test.dbg


#############################################
# Utility command for Experimental

build Experimental: phony CMakeFiles/Experimental


#############################################
# Utility command for Nightly

build Nightly: phony CMakeFiles/Nightly


#############################################
# Utility command for Continuous

build Continuous: phony CMakeFiles/Continuous


#############################################
# Utility command for NightlyMemoryCheck

build NightlyMemoryCheck: phony CMakeFiles/NightlyMemoryCheck


#############################################
# Utility command for NightlyStart

build NightlyStart: phony CMakeFiles/NightlyStart


#############################################
# Utility command for NightlyUpdate

build NightlyUpdate: phony CMakeFiles/NightlyUpdate


#############################################
# Utility command for NightlyConfigure

build NightlyConfigure: phony CMakeFiles/NightlyConfigure


#############################################
# Utility command for NightlyBuild

build NightlyBuild: phony CMakeFiles/NightlyBuild


#############################################
# Utility command for NightlyTest

build NightlyTest: phony CMakeFiles/NightlyTest


#############################################
# Utility command for NightlyCoverage

build NightlyCoverage: phony CMakeFiles/NightlyCoverage


#############################################
# Utility command for NightlyMemCheck

build NightlyMemCheck: phony CMakeFiles/NightlyMemCheck


#############################################
# Utility command for NightlySubmit

build NightlySubmit: phony CMakeFiles/NightlySubmit


#############################################
# Utility command for ExperimentalStart

build ExperimentalStart: phony CMakeFiles/ExperimentalStart


#############################################
# Utility command for ExperimentalUpdate

build ExperimentalUpdate: phony CMakeFiles/ExperimentalUpdate


#############################################
# Utility command for ExperimentalConfigure

build ExperimentalConfigure: phony CMakeFiles/ExperimentalConfigure


#############################################
# Utility command for ExperimentalBuild

build ExperimentalBuild: phony CMakeFiles/ExperimentalBuild


#############################################
# Utility command for ExperimentalTest

build ExperimentalTest: phony CMakeFiles/ExperimentalTest


#############################################
# Utility command for ExperimentalCoverage

build ExperimentalCoverage: phony CMakeFiles/ExperimentalCoverage


#############################################
# Utility command for ExperimentalMemCheck

build ExperimentalMemCheck: phony CMakeFiles/ExperimentalMemCheck


#############################################
# Utility command for ExperimentalSubmit

build ExperimentalSubmit: phony CMakeFiles/ExperimentalSubmit


#############################################
# Utility command for ContinuousStart

build ContinuousStart: phony CMakeFiles/ContinuousStart


#############################################
# Utility command for ContinuousUpdate

build ContinuousUpdate: phony CMakeFiles/ContinuousUpdate


#############################################
# Utility command for ContinuousConfigure

build ContinuousConfigure: phony CMakeFiles/ContinuousConfigure


#############################################
# Utility command for ContinuousBuild

build ContinuousBuild: phony CMakeFiles/ContinuousBuild


#############################################
# Utility command for ContinuousTest

build ContinuousTest: phony CMakeFiles/ContinuousTest


#############################################
# Utility command for ContinuousCoverage

build ContinuousCoverage: phony CMakeFiles/ContinuousCoverage


#############################################
# Utility command for ContinuousMemCheck

build ContinuousMemCheck: phony CMakeFiles/ContinuousMemCheck


#############################################
# Utility command for ContinuousSubmit

build ContinuousSubmit: phony CMakeFiles/ContinuousSubmit


#############################################
# Utility command for test

build CMakeFiles/test.util: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest
  DESC = Running tests...
  pool = console
  restat = 1

build test: phony CMakeFiles/test.util


#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ccmake -S/Users/james/git/libgitledger -B/Users/james/git/libgitledger/build-asan
  DESC = Running CMake cache editor...
  pool = console
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/cmake --regenerate-during-build -S/Users/james/git/libgitledger -B/Users/james/git/libgitledger/build-asan
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util


#############################################
# Custom command for CMakeFiles/Experimental

build CMakeFiles/Experimental | ${cmake_ninja_workdir}CMakeFiles/Experimental: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Experimental -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/Nightly

build CMakeFiles/Nightly | ${cmake_ninja_workdir}CMakeFiles/Nightly: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Nightly -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/Continuous

build CMakeFiles/Continuous | ${cmake_ninja_workdir}CMakeFiles/Continuous: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Continuous -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/NightlyMemoryCheck

build CMakeFiles/NightlyMemoryCheck | ${cmake_ninja_workdir}CMakeFiles/NightlyMemoryCheck: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=NightlyMemoryCheck -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/NightlyStart

build CMakeFiles/NightlyStart | ${cmake_ninja_workdir}CMakeFiles/NightlyStart: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Nightly -DACTIONS=Start -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/NightlyUpdate

build CMakeFiles/NightlyUpdate | ${cmake_ninja_workdir}CMakeFiles/NightlyUpdate: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Nightly -DACTIONS=Update -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/NightlyConfigure

build CMakeFiles/NightlyConfigure | ${cmake_ninja_workdir}CMakeFiles/NightlyConfigure: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Nightly -DACTIONS=Configure -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/NightlyBuild

build CMakeFiles/NightlyBuild | ${cmake_ninja_workdir}CMakeFiles/NightlyBuild: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Nightly -DACTIONS=Build -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/NightlyTest

build CMakeFiles/NightlyTest | ${cmake_ninja_workdir}CMakeFiles/NightlyTest: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Nightly -DACTIONS=Test -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/NightlyCoverage

build CMakeFiles/NightlyCoverage | ${cmake_ninja_workdir}CMakeFiles/NightlyCoverage: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Nightly -DACTIONS=Coverage -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/NightlyMemCheck

build CMakeFiles/NightlyMemCheck | ${cmake_ninja_workdir}CMakeFiles/NightlyMemCheck: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Nightly -DACTIONS=MemCheck -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/NightlySubmit

build CMakeFiles/NightlySubmit | ${cmake_ninja_workdir}CMakeFiles/NightlySubmit: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Nightly -DACTIONS=Submit -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/ExperimentalStart

build CMakeFiles/ExperimentalStart | ${cmake_ninja_workdir}CMakeFiles/ExperimentalStart: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Experimental -DACTIONS=Start -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/ExperimentalUpdate

build CMakeFiles/ExperimentalUpdate | ${cmake_ninja_workdir}CMakeFiles/ExperimentalUpdate: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Experimental -DACTIONS=Update -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/ExperimentalConfigure

build CMakeFiles/ExperimentalConfigure | ${cmake_ninja_workdir}CMakeFiles/ExperimentalConfigure: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Experimental -DACTIONS=Configure -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/ExperimentalBuild

build CMakeFiles/ExperimentalBuild | ${cmake_ninja_workdir}CMakeFiles/ExperimentalBuild: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Experimental -DACTIONS=Build -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/ExperimentalTest

build CMakeFiles/ExperimentalTest | ${cmake_ninja_workdir}CMakeFiles/ExperimentalTest: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Experimental -DACTIONS=Test -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/ExperimentalCoverage

build CMakeFiles/ExperimentalCoverage | ${cmake_ninja_workdir}CMakeFiles/ExperimentalCoverage: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Experimental -DACTIONS=Coverage -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/ExperimentalMemCheck

build CMakeFiles/ExperimentalMemCheck | ${cmake_ninja_workdir}CMakeFiles/ExperimentalMemCheck: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Experimental -DACTIONS=MemCheck -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/ExperimentalSubmit

build CMakeFiles/ExperimentalSubmit | ${cmake_ninja_workdir}CMakeFiles/ExperimentalSubmit: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Experimental -DACTIONS=Submit -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/ContinuousStart

build CMakeFiles/ContinuousStart | ${cmake_ninja_workdir}CMakeFiles/ContinuousStart: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Continuous -DACTIONS=Start -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/ContinuousUpdate

build CMakeFiles/ContinuousUpdate | ${cmake_ninja_workdir}CMakeFiles/ContinuousUpdate: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Continuous -DACTIONS=Update -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/ContinuousConfigure

build CMakeFiles/ContinuousConfigure | ${cmake_ninja_workdir}CMakeFiles/ContinuousConfigure: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Continuous -DACTIONS=Configure -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/ContinuousBuild

build CMakeFiles/ContinuousBuild | ${cmake_ninja_workdir}CMakeFiles/ContinuousBuild: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Continuous -DACTIONS=Build -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/ContinuousTest

build CMakeFiles/ContinuousTest | ${cmake_ninja_workdir}CMakeFiles/ContinuousTest: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Continuous -DACTIONS=Test -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/ContinuousCoverage

build CMakeFiles/ContinuousCoverage | ${cmake_ninja_workdir}CMakeFiles/ContinuousCoverage: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Continuous -DACTIONS=Coverage -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/ContinuousMemCheck

build CMakeFiles/ContinuousMemCheck | ${cmake_ninja_workdir}CMakeFiles/ContinuousMemCheck: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Continuous -DACTIONS=MemCheck -S CMakeFiles/CTestScript.cmake -V
  pool = console


#############################################
# Custom command for CMakeFiles/ContinuousSubmit

build CMakeFiles/ContinuousSubmit | ${cmake_ninja_workdir}CMakeFiles/ContinuousSubmit: CUSTOM_COMMAND
  COMMAND = cd /Users/james/git/libgitledger/build-asan && /opt/homebrew/bin/ctest -DMODEL=Continuous -DACTIONS=Submit -S CMakeFiles/CTestScript.cmake -V
  pool = console

# =============================================================================
# Target aliases.

build gitledger: phony libgitledger.a

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: /Users/james/git/libgitledger/build-asan

build all: phony libgitledger.a gitledger_version_test gitledger_tests mg-ledger gitledger_error_test

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja /Users/james/git/libgitledger/build-asan/cmake_install.cmake /Users/james/git/libgitledger/build-asan/CTestTestfile.cmake: RERUN_CMAKE | /Users/james/git/libgitledger/CMakeLists.txt /opt/homebrew/share/cmake/Modules/CMakeCInformation.cmake /opt/homebrew/share/cmake/Modules/CMakeCommonLanguageInclude.cmake /opt/homebrew/share/cmake/Modules/CMakeGenericSystem.cmake /opt/homebrew/share/cmake/Modules/CMakeInitializeConfigs.cmake /opt/homebrew/share/cmake/Modules/CMakeLanguageInformation.cmake /opt/homebrew/share/cmake/Modules/CMakeSystemSpecificInformation.cmake /opt/homebrew/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake /opt/homebrew/share/cmake/Modules/CTest.cmake /opt/homebrew/share/cmake/Modules/CTestTargets.cmake /opt/homebrew/share/cmake/Modules/CTestUseLaunchers.cmake /opt/homebrew/share/cmake/Modules/Compiler/AppleClang-C.cmake /opt/homebrew/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang.cmake /opt/homebrew/share/cmake/Modules/Compiler/GNU.cmake /opt/homebrew/share/cmake/Modules/DartConfiguration.tcl.in /opt/homebrew/share/cmake/Modules/Internal/CMakeCLinkerInformation.cmake /opt/homebrew/share/cmake/Modules/Internal/CMakeCommonLinkerInformation.cmake /opt/homebrew/share/cmake/Modules/Linker/AppleClang-C.cmake /opt/homebrew/share/cmake/Modules/Linker/AppleClang.cmake /opt/homebrew/share/cmake/Modules/Platform/Apple-AppleClang-C.cmake /opt/homebrew/share/cmake/Modules/Platform/Apple-Clang-C.cmake /opt/homebrew/share/cmake/Modules/Platform/Apple-Clang.cmake /opt/homebrew/share/cmake/Modules/Platform/Darwin-Initialize.cmake /opt/homebrew/share/cmake/Modules/Platform/Darwin.cmake /opt/homebrew/share/cmake/Modules/Platform/Linker/Apple-AppleClang-C.cmake /opt/homebrew/share/cmake/Modules/Platform/Linker/Apple-AppleClang.cmake /opt/homebrew/share/cmake/Modules/Platform/UnixPaths.cmake /opt/homebrew/share/cmake/Templates/CTestScript.cmake.in CMakeCache.txt CMakeFiles/4.1.2/CMakeCCompiler.cmake CMakeFiles/4.1.2/CMakeSystem.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build /Users/james/git/libgitledger/CMakeLists.txt /opt/homebrew/share/cmake/Modules/CMakeCInformation.cmake /opt/homebrew/share/cmake/Modules/CMakeCommonLanguageInclude.cmake /opt/homebrew/share/cmake/Modules/CMakeGenericSystem.cmake /opt/homebrew/share/cmake/Modules/CMakeInitializeConfigs.cmake /opt/homebrew/share/cmake/Modules/CMakeLanguageInformation.cmake /opt/homebrew/share/cmake/Modules/CMakeSystemSpecificInformation.cmake /opt/homebrew/share/cmake/Modules/CMakeSystemSpecificInitialize.cmake /opt/homebrew/share/cmake/Modules/CTest.cmake /opt/homebrew/share/cmake/Modules/CTestTargets.cmake /opt/homebrew/share/cmake/Modules/CTestUseLaunchers.cmake /opt/homebrew/share/cmake/Modules/Compiler/AppleClang-C.cmake /opt/homebrew/share/cmake/Modules/Compiler/CMakeCommonCompilerMacros.cmake /opt/homebrew/share/cmake/Modules/Compiler/Clang.cmake /opt/homebrew/share/cmake/Modules/Compiler/GNU.cmake /opt/homebrew/share/cmake/Modules/DartConfiguration.tcl.in /opt/homebrew/share/cmake/Modules/Internal/CMakeCLinkerInformation.cmake /opt/homebrew/share/cmake/Modules/Internal/CMakeCommonLinkerInformation.cmake /opt/homebrew/share/cmake/Modules/Linker/AppleClang-C.cmake /opt/homebrew/share/cmake/Modules/Linker/AppleClang.cmake /opt/homebrew/share/cmake/Modules/Platform/Apple-AppleClang-C.cmake /opt/homebrew/share/cmake/Modules/Platform/Apple-Clang-C.cmake /opt/homebrew/share/cmake/Modules/Platform/Apple-Clang.cmake /opt/homebrew/share/cmake/Modules/Platform/Darwin-Initialize.cmake /opt/homebrew/share/cmake/Modules/Platform/Darwin.cmake /opt/homebrew/share/cmake/Modules/Platform/Linker/Apple-AppleClang-C.cmake /opt/homebrew/share/cmake/Modules/Platform/Linker/Apple-AppleClang.cmake /opt/homebrew/share/cmake/Modules/Platform/UnixPaths.cmake /opt/homebrew/share/cmake/Templates/CTestScript.cmake.in CMakeCache.txt CMakeFiles/4.1.2/CMakeCCompiler.cmake CMakeFiles/4.1.2/CMakeSystem.cmake: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
